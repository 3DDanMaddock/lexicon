import Head from "next/head";
import React, { useLayoutEffect, useRef, useState } from "react";
import { Box, Container, Input, Text } from "theme-ui";
import words from "../data/words.json";

///AIzaSyCmO6gt-EbUixNEigELZfdxAW3UPugRBdM

export default function Home() {
  const [results, setResults] = useState(null);
  const definitions = useRef();

  let windowTimeout = null;

  const inputChange = (e) => {
    console.log(e.target.value);

    definitions.current.classList.add("loading");

    window.clearTimeout(windowTimeout);

    windowTimeout = window.setTimeout(() => {
      const _value = e.target.value;

      const _results = words.filter((word) => {
        let include = false;

        if (word.word.toLowerCase().includes(_value.toLowerCase())) include = true;
        if (word.definition.toLowerCase().includes(_value.toLowerCase())) include = true;

        return include;
      });

      definitions.current.classList.remove("loading");

      setResults(_results);
    }, 400);
  };

  useLayoutEffect(() => {
    console.log(words);
    setResults(words);
  }, []);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Box as="main">
        <Container className="container" sx={{ textAlign: "center" }}>
          <Text as="h1" variant="h1" mb="lg">
            Thirdera ServiceNow Lexicon
          </Text>
          <Box as="form" mb="xl" sx={{ textAlign: "left" }}>
            <Box as="label" sx={{ fontWeight: "bold", pb: "sm", display: "block" }}>
              Search
            </Box>
            <Input onChange={(e) => inputChange(e)} placeholder="Search for..." />
          </Box>
          <Box
            sx={{
              textAlign: "left",
              transition: "opacity 0.3s ease-in-out",
            }}
            ref={definitions}
          >
            {results &&
              results.map((word) => (
                <Box key={`word-${word.word}`} mb="lg">
                  <Box sx={{ fontWeight: "bold" }} mb="sm">
                    {word.word}
                  </Box>
                  <Box>{word.definition}</Box>
                </Box>
              ))}
          </Box>
        </Container>
      </Box>
    </>
  );
}
